module(
    name = "repro",
    version = "0.0.0",
)

bazel_dep(name = "gazelle", version = "0.34.0", repo_name = "bazel_gazelle")
bazel_dep(name = "rules_go", version = "0.43.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "rules_python", version = "0.27.1")
bazel_dep(name = "rules_python_gazelle_plugin", version = "0.27.1")
#bazel_dep(name = "rules_pyvenv", version = "0.0.0")

# git_override(
#     module_name = "rules_pyvenv",
#     commit = "78cba8d5ce1fa95fc6ea1871b49859e66a4227f2",
#     remote = "https://github.com/cognitedata/rules_pyvenv.git",
# )

#### Golang ####

GO_VERSION = "1.21.1"

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(
    name = "go_sdk",
    version = GO_VERSION,
)
use_repo(
    go_sdk,
    "go_sdk",
)

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "@repro//:go.mod")
use_repo(
    go_deps,
    "com_github_cognitedata_bazel_snapshots",
)

#### Python ####

PYTHON_VERSION = "3.11"

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    is_default = True,
    python_version = PYTHON_VERSION,
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "python_deps",
    python_version = PYTHON_VERSION,
    requirements_lock = "//:requirements.txt",
)
use_repo(
    pip,
    "python_deps",
)
