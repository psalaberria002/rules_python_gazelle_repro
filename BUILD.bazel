load("@bazel_gazelle//:def.bzl", "DEFAULT_LANGUAGES", "gazelle", "gazelle_binary")
load("@python_deps//:requirements.bzl", "all_whl_requirements")
load("@rules_python//python:pip.bzl", "compile_pip_requirements")
load("@rules_python_gazelle_plugin//manifest:defs.bzl", "gazelle_python_manifest")
load("@rules_python_gazelle_plugin//modules_mapping:def.bzl", "modules_mapping")
#load("@rules_pyvenv//:venv.bzl", "py_venv")

exports_files(
    [
        "go.mod",
        "go.sum",
        "pyproject.toml",
    ],
    ["//visibility:public"],
)

# gazelle:exclude tools/remote_build/buildfarm_config
gazelle_binary(
    name = "gazelle_bin",
    languages = DEFAULT_LANGUAGES + [
        "@rules_python_gazelle_plugin//python",
    ],
)

# gazelle:prefix github.com/psalaberria002/rules_python_gazelle_repro
# gazelle:proto disable_global

# Exclude the temporary files generated by gomock, but not those written back to source.
# gazelle:exclude **/*.generated.temp.go
# gazelle:exclude .venv
# gazelle:resolve go github.com/cognitedata/bazel-snapshots/snapshots/go/pkg/models @com_cognitedata_bazel_snapshots//snapshots/go/pkg/models:models
gazelle(
    name = "gazelle",
    gazelle = "//:gazelle_bin",
)

# Gazelle check: exits with 1 if gazelle wants to make changes.
#
# Usage:
#   bazel run gazelle_check
gazelle(
    name = "gazelle_check",
    command = "update",
    extra_args = ["-mode=diff"],
    gazelle = "//:gazelle_bin",
)

# Compile requirements and check that are up-to-date
# bazel run //:requirements.update
# bazel test //:requirements_test
compile_pip_requirements(
    name = "requirements",
    timeout = "moderate",
    requirements_in = "requirements.in",
)

# Create virtual environment for using in IDEs
# py_venv(
#     name = "venv",
#     venv_location = ".venv",
#     deps = all_requirements,
# )

# This rule fetches the metadata for python packages we depend on. That data is
# required for the gazelle_python_manifest rule to update our manifest file.
modules_mapping(
    name = "modules_map",
    wheels = all_whl_requirements,
)

gazelle_python_manifest(
    name = "gazelle_python",
    modules_mapping = ":modules_map",
    pip_repository_name = "python_deps",
    requirements = "//:requirements.txt",
    # NOTE: we can use this flag in order to make our setup compatible with
    # bzlmod.
    use_pip_repository_aliases = True,
)
